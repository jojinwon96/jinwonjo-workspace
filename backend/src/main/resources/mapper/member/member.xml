<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.me.backend.member.mapper.MemberMapper">

    <select id="checkId" parameterType="hashMap" resultType="_int">
        select
        count(*)
        <choose>
            <when test="target == 0">
                from foryou.customer
                where cust_id = #{id}
            </when>
            <otherwise>
                from foryou.seller
                where seller_id = #{id}
            </otherwise>
        </choose>

    </select>

    <select id="member" resultType="MemberDTO">
        <choose>
            <when test='cust_id neq ""'>
                select
                cust_id,
                cust_pwd,
                cust_name,
                cust_email,
                cust_tel,
                mileage,
                status
                from foryou.customer
                where cust_id = #{cust_id} and cust_pwd = #{cust_pwd} and status = 'N'
            </when>
            <otherwise>
                select
                seller_id,
                seller_pwd,
                seller_name,
                seller_tel,
                from foryou.seller
                where cust_id = #{seller_id} and cust_pwd = #{seller_pwd} and status = 'N'
            </otherwise>
        </choose>
    </select>

    <select id="loginMember" parameterType="hashMap" resultType="MemberDTO">
        <choose>
            <when test="target == 'user'">
                select
                cust_id,
                cust_pwd,
                cust_name,
                cust_email,
                cust_tel,
                mileage,
                status
                from foryou.customer
                where cust_id = #{id}
            </when>
            <otherwise>
                select
                seller_id,
                seller_pwd,
                seller_number,
                company_name,
                seller_tel,
                seller_name
                from foryou.seller
                where seller_id = #{id}
            </otherwise>
        </choose>
    </select>

    <insert id="signUp">
        <choose>
            <when test='cust_id neq ""'>
                insert
                into
                foryou.customer
                (
                cust_id,
                cust_pwd,
                cust_name,
                cust_email,
                cust_tel,
                mileage,
                banned,
                status,
                enroll_date,
                delete_date,
                token
                )
                values
                (
                #{cust_id},
                #{cust_pwd},
                #{cust_name},
                #{cust_email},
                #{cust_tel},
                default,
                default,
                default,
                default,
                default,
                default
                );
                insert
                into
                foryou.address
                (
                cust_id,
                name,
                post,
                addr,
                addr_detail,
                addr_default
                )
                values
                (
                #{cust_id},
                #{cust_name},
                #{post},
                #{address1},
                #{address2},
                default
                );
            </when>
            <otherwise>
                insert
                into
                foryou.seller
                (
                seller_id,
                seller_pwd,
                seller_number,
                seller_name,
                company_name,
                seller_tel,
                status,
                enroll_date
                )
                values
                (
                #{seller_id},
                #{seller_pwd},
                #{seller_number},
                #{seller_name},
                #{company_name},
                #{seller_tel},
                default,
                default
                )
            </otherwise>
        </choose>
    </insert>

    <insert id="like" parameterType="hashMap">
        insert into
            foryou.like
            (
                cust_id,
                product_id
            )
            values
            (
                #{cust_id},
                #{product_id}
            )
    </insert>

    <delete id="deleteLike" parameterType="hashMap">
        delete
        from foryou.like
        where like_id = #{like_id}
    </delete>

    <select id="findLike" parameterType="_int" resultType="_int">
        select like_id
        from foryou.`like`
        where like_id = #{id}
        union all
        select 0
        from dual
        where not exists(
                select like_id
                from foryou.`like`
                where like_id = #{id}
        )
    </select>

    <select id="findInputLike" resultType="_int">
        select max(like_id) as 'like_id'
        from foryou.`like`
    </select>

    <select id="likeList" parameterType="String" resultType="ProductDTO">
        select l.product_id,  product_name, img1, price, uploadFile, like_id
        from foryou.`like` l
                 left join foryou.product p on p.product_id = l.product_id
                 join foryou.option o on p.product_id = o.product_id
        where cust_id = #{id} and main = 'Y'
    </select>

    <delete id="deleteLikeList" parameterType="java.util.List">
        delete from foryou.like
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
                (like_id = #{item.like_id} AND cust_id = #{item.seller_id})
            </foreach>
        </where>
    </delete>

</mapper>