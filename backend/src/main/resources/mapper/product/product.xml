<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.me.backend.product.mapper.ProductMapper">

    <select id="findAllModifyProducts" parameterType="hashmap" resultType="ProductDTO">
        select p.product_id
             , product_name
             , option_id
             , option_name1
             , option_content1
             , option_name2
             , option_content2
             , option_price
             , discount
             , price
             , maxCount
             , stock
             , main
             , img1
             , img2
             , img3
             , img4
             , img5
             , o.status as 'status'
             , uploadFile
        from foryou.seller s
                 join foryou.product p on s.seller_id = p.seller_id
                 join foryou.category c on p.category_id = c.category_id
                 join foryou.option o on p.product_id = o.product_id
        where p.seller_id = #{id}
          and p.status = 'Y'
          and p.product_id = #{product_id}
    </select>

    <select id="productCount" parameterType="hashmap" resultType="_int">
        <choose>
            <when test="target == '0'">
                select count(*)
                from foryou.option o
                join foryou.product p on o.product_id = p.product_id
                where seller_id = #{id} and and p.status = 'Y'
            </when>
            <otherwise>
                select count(*)
                from foryou.seller s
                join foryou.product p on (s.seller_id = p.seller_id)
                join foryou.category c on (p.category_id = c.category_id)
                join foryou.option o on (p.product_id = o.product_id)
                where p.seller_id = #{id}
                and p.status = 'Y'
                and p.category_id like CONCAT('%',#{category_id},'%')
                and product_name like CONCAT('%',#{keyword},'%')
                and p.product_id like CONCAT('%',#{product_id},'%')
            </otherwise>
        </choose>
    </select>

    <select id="findProduct" parameterType="hashmap" resultType="ProductDTO">
        select p.product_id,
               product_name,
               option_id,
               option_name1,
               option_name2,
               option_content1,
               option_content2,
               category_name,
               option_price,
               discount,
               price,
               stock,
               img1,
               o.status as 'status',
               uploadFile
        from foryou.seller s
                 join foryou.product p on (s.seller_id = p.seller_id)
                 join foryou.category c on (p.category_id = c.category_id)
                 join foryou.option o on (p.product_id = o.product_id)
        where p.seller_id = #{id}
          and p.status = 'Y'
          and p.category_id like CONCAT('%', #{category_id}, '%')
          and product_name like CONCAT('%', #{keyword}, '%')
          and p.product_id like CONCAT('%', #{product_id}, '%')
        order by product_id
            limit #{pageInfo.startList}, #{pageInfo.listSize}
    </select>

    <select id="modifyProductsCount" parameterType="hashmap" resultType="_int">
        <choose>
            <when test="target == '0'">
                select count(*)
                from foryou.seller s
                join foryou.product p on s.seller_id = p.seller_id
                join foryou.category c on p.category_id = c.category_id
                join foryou.option o on p.product_id = o.product_id
                where p.seller_id = #{id}
                and p.status = 'Y'
                and main = 'Y'
            </when>
            <otherwise>
                select count(*)
                from foryou.seller s
                join foryou.product p on s.seller_id = p.seller_id
                join foryou.category c on p.category_id = c.category_id
                join foryou.option o on p.product_id = o.product_id
                where p.seller_id = 'seller01'
                and p.status = 'Y'
                and main = 'Y'
                and p.category_id like CONCAT('%',#{category_id},'%')
                and product_name like CONCAT('%',#{keyword},'%')
                and p.product_id like CONCAT('%',#{product_id},'%')
            </otherwise>
        </choose>
    </select>

    <select id="findModifyProducts" parameterType="hashmap" resultType="ProductDTO">
        select p.product_id, product_name, img1, c.category_name, price, stock, o.status as 'status', uploadFile
        from foryou.seller s
                 join foryou.product p on s.seller_id = p.seller_id
                 join foryou.category c on p.category_id = c.category_id
                 join foryou.option o on p.product_id = o.product_id
        where p.seller_id = #{id}
          and p.status = 'Y'
          and main = 'Y'
          and p.category_id like CONCAT('%', #{category_id}, '%')
          and product_name like CONCAT('%', #{keyword}, '%')
          and p.product_id like CONCAT('%', #{product_id}, '%')
        order by product_id
            limit #{pageInfo.startList}, #{pageInfo.listSize}
    </select>

    <select id="categoryList" resultType="ProductDTO">
        select category_id, category_name
        from foryou.category
        where category_id2 IS NOT NULL
        order by cast(REGEXP_REPLACE(category_id, '[_a-z]', '') as unsigned)
    </select>

    <insert id="inputProduct">
        insert
        into foryou.product
        (product_name,
         img1,
         img2,
         img3,
         img4,
         img5,
         uploadFile,
         category_id,
         seller_id)
        values (#{product_name},
                #{img1},
                #{img2},
                #{img3},
                #{img4},
                #{img5},
                'Y',
                #{category_id},
                #{seller_id})
    </insert>

    <insert id="inputOptions" parameterType="java.util.List">
        insert
        into foryou.option
        (
        product_id,
        option_name1,
        option_content1,
        option_name2,
        option_content2,
        option_price,
        discount,
        price,
        stock,
        maxCount,
        main,
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            (select max(product_id) from foryou.product),
            #{item.option_name1},
            #{item.option_content1},
            #{item.option_name2},
            #{item.option_content2},
            #{item.option_price},
            #{item.discount},
            #{item.price},
            #{item.stock},
            #{item.maxCount},
            #{item.main}
            )
        </foreach>
    </insert>

    <update id="modifyProduct" parameterType="ProductDTO">
        update foryou.product
        set product_name = #{product_name},
            img1         = #{img1},
            img2         = #{img2},
            img3         = #{img3},
            img4         = #{img4},
            img5         = #{img5}
        where product_id = #{product_id}
    </update>

    <update id="modifyOptions" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            <if test='item.addStatus != "Y"'></if>
            update foryou.option
            set option_name1 = #{item.option_name1},
            option_name2 = #{item.option_name2},
            option_content1 = #{item.option_content1},
            option_content2 = #{item.option_content2},
            option_price = #{item.option_price},
            discount = #{item.discount},
            price = #{item.price},
            stock = #{item.stock},
            maxCount = #{item.maxCount},
            main = #{item.main},
            status = #{item.status}
            where option_id = #{item.option_id}
        </foreach>
    </update>

    <insert id="inputModifyProducts">
        insert
        into foryou.option
        (
        product_id,
        option_name1,
        option_content1,
        option_name2,
        option_content2,
        option_price,
        discount,
        price,
        stock,
        maxCount,
        main
        )
        values
        <foreach collection="list" item="item" separator=",">
            <if test='item.addStatus == "Y"'>
                (
                #{item.product_id},
                #{item.option_name1},
                #{item.option_content1},
                #{item.option_name2},
                #{item.option_content2},
                #{item.option_price},
                #{item.discount},
                #{item.price},
                #{item.stock},
                #{item.maxCount},
                #{item.main}
                )
            </if>
        </foreach>
    </insert>

    <update id="modifyProductImg" parameterType="hashmap">
        update foryou.product
        set img1 = #{img1}
        where product_id = #{id}
    </update>


    <select id="modifyImg" parameterType="String" resultType="ProductDTO">
        select img1
        from foryou.product
        where product_id = '${id}';
    </select>


    <select id="goodsCount" parameterType="String" resultType="_int">
        select count(*)
        from foryou.product
        where category_id = #{category_id}
    </select>

    <select id="goods" parameterType="hashmap" resultType="ProductDTO">
        select p.product_id, p.product_name, img1, uploadFile, option_price, price, discount, like_id
        from foryou.product p
        inner
            join foryou.option o on (p.product_id = o.product_id)
            left join foryou.like l on (p.product_id = l.product_id)
        where category_id = #{category_id}
        and o.status = 'Y' and o.main = 'Y'
        order by
        <choose>
            <when test="sortTarget.equals('asc')">
                price asc
            </when>
            <when test="sortTarget.equals('desc')">
                price desc
            </when>
            <otherwise>
                p.product_id*1
            </otherwise>
        </choose>
        limit #{pageInfo.startList}, #{pageInfo.listSize}
    </select>

    <select id="findGoods" parameterType="String" resultType="ProductDTO">
        select
               p.product_id
             , p.product_name
             , option_id
             , option_name1
             , option_content1
             , option_name2
             , option_content2
             , option_price
             , discount
             , price
             , maxCount
             , stock
             , main
             , img1
             , img2
             , img3
             , img4
             , img5
             , category_name
             , company_name
             , uploadFile
        from foryou.product p
                 join foryou.option o on (p.product_id = o.product_id)
                 join foryou.seller s on (p.seller_id = s.seller_id)
                 join foryou.category c on (p.category_id = c.category_id)
        where p.product_id = #{id} and p.status = 'Y'
    </select>

    <select id="goodsPriceRange" parameterType="String" resultType="optionDTO">
        select
            option_content1,
            max(option_price) as 'maxPrice',
            min(option_price) as 'minPrice'
        from foryou.product p
                 join foryou.option o on (p.product_id = o.product_id)
        where p.product_id = #{id} and p.status = 'Y' and o.status = 'Y'
        group by option_content1
    </select>
</mapper>